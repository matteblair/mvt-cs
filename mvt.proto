syntax = "proto3";

option csharp_namespace = "mvtcs";

message Tile {
    enum GeomType {
         UNKNOWN = 0;
         POINT = 1;
         LINESTRING = 2;
         POLYGON = 3;
    }

    // Variant type encoding
    message Value {
        oneof Kind {
            // Exactly one of these values may be present in a valid message
            string string_value = 1;
            float float_value = 2;
            double double_value = 3;
            int64 int_value = 4;
            uint64 uint_value = 5;
            sint64 sint_value = 6;
            bool bool_value = 7;
        }
    }

    message Feature {
        uint64 id = 1;

        // Tags of this feature. Even numbered values refer to the nth
        // value in the keys list on the tile message, odd numbered
        // values refer to the nth value in the values list on the tile
        // message.
        repeated uint32 tags = 2;

        // The type of geometry stored in this feature.
        GeomType type = 3;

        // Contains a stream of commands and parameters (vertices). The
        // repeat count is shifted to the left by 3 bits. This means
        // that the command has 3 bits (0-7). The repeat count
        // indicates how often this command is to be repeated. Defined
        // commands are:
        // - MoveTo:    1   (2 parameters follow)
        // - LineTo:    2   (2 parameters follow)
        // - ClosePath: 7   (no parameters follow)
        //
        // Ex.: MoveTo(3, 6), LineTo(8, 12), LineTo(20, 34), ClosePath
        // Encoded as: [ 9 3 6 18 5 6 12 22 15 ]
        //                                  == command type 7 (ClosePath), length 1
        //                             ===== relative LineTo(+12, +22) == LineTo(20, 34)
        //                         === relative LineTo(+5, +6) == LineTo(8, 12)
        //                      == [00010 010] = command type 2 (LineTo), length 2
        //                  === relative MoveTo(+3, +6)
        //              == [00001 001] = command type 1 (MoveTo), length 1
        // Commands are encoded as uint32 varints, vertex parameters are
        // encoded as sint32 varints (zigzag). Vertex parameters are
        // also encoded as deltas to the previous position. The original
        // position is (0,0)
        repeated uint32 geometry = 4;
    }

    message Layer {
        // Any compliant implementation must first read the version
        // number encoded in this message and choose the correct
        // implementation for this version number before proceeding to
        // decode other parts of this message.
        uint32 version = 15;

        string name = 1;

        // The actual features in this tile.
        repeated Feature features = 2;

        // Dictionary encoding for keys
        repeated string keys = 3;

        // Dictionary encoding for values
        repeated Value values = 4;

        // The MVT spec includes a default value of 4096 for extent,
        // But proto3 only allows default values of 0.
        uint32 extent = 5;
    }

    repeated Layer layers = 3;
}
